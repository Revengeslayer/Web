@model IEnumerable<WebApplication1.Models.ViewModel.MyApiViewModel>

@{
    ViewData["Title"] = "Get";
}


<h1>Get</h1>

<label for="sort">排序：</label>
<select id="sort">
    <option value="name1">依名稱(升序)</option>
    <option value="name2">依名稱(降序)</option>
    <option value="time1">依修改時間(升序)</option>
    <option value="time2">依修改時間(降序)</option>
    <option value="path1">依路徑(升序)</option>
    <option value="path2">依路徑(降序)</option>
    <option value="size1">依檔案大小(升序)</option>
    <option value="size2">依檔案大小(降序)</option>
</select>

<button id="btnSubmit">提交</button>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastWriteTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Path)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FileType)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastWriteTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Path)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Size)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FileType)
                </td>
                <td>
                    @{
                        if(item.FileType==".txt")
                        {
                            @Html.ActionLink("Edit", "UpdateData")
                            @Html.Raw(" | ")
                            @Html.ActionLink("Delete", "DeleteData")
                        }
                        else
                        {
                            @Html.ActionLink("Delete", "DeleteData")
                        }
                    }                  
                </td>
            </tr>
        }
    </tbody>
</table>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script src="/_framework/aspnetcore-browser-refresh.js"></script>
<script>
    $(document).ready(function () {
        $("#btnSubmit").click(function (e) {
            e.preventDefault();

            var sortValue = $("#sort").val();
            var myApiViewModel = @Html.Raw(Json.Serialize(Model));

            var viewData = {
                sortOption: sortValue,
                viewModelData: myApiViewModel
            };
            $.ajax({
                url: '/MyApi/GetOrderBySelection',
                type: 'POST',
                data: viewData,
                success: function (response) {
                    console.log(response);
                    var tableBody = $(".table tbody");
                    tableBody.empty();
                    response.forEach(function (item) {
                        var row = $("<tr>").append(
                            $("<td>").text(item.name),
                            $("<td>").text(ShowTime(item.lastWriteTime)),
                            $("<td>").text(item.path),
                            $("<td>").text(item.size),
                            $("<td>").text(item.fileType),
                            $("<td>").append(ShowEndCell(item.fileType))
                        )
                        tableBody.append(row);

                        function ShowTime(time) {
                            var recordDateTime = new Date(time);

                            var year = recordDateTime.getFullYear();
                            var month = recordDateTime.getMonth() + 1;
                            var day = recordDateTime.getDate();
                            var hours = recordDateTime.getHours();
                            var minutes = recordDateTime.getMinutes();
                            var seconds = recordDateTime.getSeconds();

                            var amOrPm = hours >= 12 ? '下午' : '上午';
                            hours = hours % 12;
                            hours = hours ? hours : 12;
                            hours = hours.toString().padStart(2, '0');
                            minutes = minutes.toString().padStart(2, '0');
                            seconds = seconds.toString().padStart(2, '0');

                            var formattedDateTime = year + '/' + month + '/' + day + ' ' + amOrPm + ' ' + hours + ':' + minutes + ':' + seconds;
                            return formattedDateTime;
                        }

                        function ShowEndCell(fileType)
                        {
                            if (fileType === '.txt') {
                                var editLink = `<a href="/MyApi/UpdateData">Edit</a>`;
                                var deleteLink = `<a href="/MyApi/DeleteData">Delete</a>`;
                                var separator = ' | ';

                                var endCell = document.createElement('td');
                                endCell.innerHTML = `${editLink} ${separator} ${deleteLink}`;

                                return endCell;
                            } else {
                                var deleteLink = `<a href="/MyApi/DeleteData">Delete</a>`;

                                var endCell = document.createElement('td');
                                endCell.innerHTML = `${deleteLink}`;

                                return endCell;
                            }
                        }
                    });
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        });
    });
</script>